"use client";

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { ChevronLeft, ChevronRight } from 'lucide-react';
import { Card } from '@/ui/card';
import { Button } from '@/ui/button';

const inspirationItems = [
  {
    category: "–°–µ–º—å—è",
    text: "–ü—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è —Å —Å–µ–º—å–µ–π - –æ–¥–Ω–æ –∏–∑ —Å–∞–º—ã—Ö –ø—Ä–∏—è—Ç–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π. –ú—ã –ª—é–±–∏–º –∏–≥—Ä–∞—Ç—å –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã –∏ –≥–æ—Ç–æ–≤–∏—Ç—å –≤–º–µ—Å—Ç–µ..."
  },
  {
    category: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
    text: "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –º–µ–Ω—è–µ—Ç –Ω–∞—à—É –∂–∏–∑–Ω—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –í–æ—Ç 5 —Å–ø–æ—Å–æ–±–æ–≤, –∫–∞–∫ –ò–ò –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö..."
  },
  {
    category: "–ó–¥–æ—Ä–æ–≤—å–µ",
    text: "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞ - –∫–ª—é—á –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–º—É –¥–Ω—é. –î–µ–ª—é—Å—å —Å–≤–æ–∏–º–∏ –ª—é–±–∏–º—ã–º–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–Ω–∏–º–∞—é—Ç –≤—Å–µ–≥–æ 10 –º–∏–Ω—É—Ç..."
  },
  {
    category: "–ë–∏–∑–Ω–µ—Å",
    text: "–ú–∞–ª—ã–π –±–∏–∑–Ω–µ—Å - –æ—Å–Ω–æ–≤–∞ —ç–∫–æ–Ω–æ–º–∏–∫–∏. –°–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–æ–º, –∫–∞–∫ –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –¥–µ–ª–æ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –≤–ª–æ–∂–µ–Ω–∏—è–º–∏..."
  },
  {
    category: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
    text: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞ –º–æ–∂–Ω–æ –¥–∞–∂–µ –≤ —Å–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ. –î–µ–ª—é—Å—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º–∏ –º–µ—Å—Ç–∞–º–∏, –æ –∫–æ—Ç–æ—Ä—ã—Ö –∑–Ω–∞—é—Ç –Ω–µ–º–Ω–æ–≥–∏–µ..."
  }
];

export function InspirationCard() {
  const router = useRouter();
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAnimating, setIsAnimating] = useState(false);

  const nextSlide = () => {
    if (isAnimating) return;
    setIsAnimating(true);
    setCurrentIndex((prev) => (prev + 1) % inspirationItems.length);
    setTimeout(() => setIsAnimating(false), 300);
  };

  const prevSlide = () => {
    if (isAnimating) return;
    setIsAnimating(true);
    setCurrentIndex((prev) => (prev - 1 + inspirationItems.length) % inspirationItems.length);
    setTimeout(() => setIsAnimating(false), 300);
  };

  const handleCreatePost = () => {
    router.push('/create-post');
  };

  return (
    <Card className="col-span-2 p-6 shadow-none bg-white/95 hover:bg-white transition-all duration-200 no-border hover:shadow-[0_4px_20px_-4px_rgba(0,0,0,0.1)]">
      <div className="flex items-center space-x-3 mb-4">
        <div className="h-12 w-12 bg-[#E8F5E9] rounded-lg flex items-center justify-center">
          <div className="text-2xl">üí°</div>
        </div>
        <div>
          <h3 className="font-semibold">–í–¥–æ—Ö–Ω–æ–≤–∏—Å—å</h3>
          <p className="text-sm text-muted-foreground">
            –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—É—é –∏–¥–µ—é –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é Ai
          </p>
        </div>
      </div>

      <div className="relative px-8">
        <div className="overflow-hidden">
          <div 
            className="transition-transform duration-300 ease-in-out flex"
            style={{ transform: `translateX(-${currentIndex * 100}%)` }}
          >
            {inspirationItems.map((item, index) => (
              <div 
                key={index}
                className="w-full flex-shrink-0 rounded-lg p-4 border border-border/40 transition-all duration-200 hover:shadow-[0_4px_20px_-4px_rgba(0,0,0,0.1)] hover:scale-[1.02] hover:translate-y-[-2px]"
              >
                <div className="text-sm font-medium mb-2">{item.category}</div>
                <p className="text-sm text-muted-foreground">
                  {item.text}
                </p>
              </div>
            ))}
          </div>
        </div>
        
        <Button 
          variant="ghost" 
          size="icon" 
          onClick={prevSlide}
          className="absolute left-0 top-1/2 -translate-y-1/2 rounded-full bg-white/80 hover:bg-white shadow-sm"
        >
          <ChevronLeft className="h-6 w-6" />
        </Button>
        
        <Button 
          variant="ghost" 
          size="icon" 
          onClick={nextSlide}
          className="absolute right-0 top-1/2 -translate-y-1/2 rounded-full bg-white/80 hover:bg-white shadow-sm"
        >
          <ChevronRight className="h-6 w-6" />
        </Button>
      </div>

      <div className="mt-4 flex justify-center">
        <Button onClick={handleCreatePost}>
          –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç
        </Button>
      </div>
    </Card>
  );
}