"use client";

import { useEffect, useRef } from 'react';
import { Copy, ThumbsUp, ThumbsDown } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip";

interface Message {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  timestamp: Date;
}

// Example messages
const messages: Message[] = [
  {
    id: '1',
    role: 'user',
    content: '–ü—Ä–∏–≤–µ—Ç! –ü–æ–º–æ–≥–∏ –º–Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è.',
    timestamp: new Date(2024, 0, 15, 14, 30)
  },
  {
    id: '2',
    role: 'assistant',
    content: `–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–∏—Ç–∞–Ω–∏–∏:

üçé –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ - –∫–ª—é—á –∫ –∑–¥–æ—Ä–æ–≤—å—é –∏ —ç–Ω–µ—Ä–≥–∏–∏!

–ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã, —á—Ç–æ –Ω–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ 70% –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –º—ã –µ–¥–∏–º? –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è:

1Ô∏è‚É£ –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –≤ —Ä–∞—Ü–∏–æ–Ω–µ
- –í–∫–ª—é—á–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤—Å–µ—Ö –≥—Ä—É–ø–ø
- –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ —Å–µ–∑–æ–Ω–Ω—ã—Ö –æ–≤–æ—â–∞—Ö –∏ —Ñ—Ä—É–∫—Ç–∞—Ö
- –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏

2Ô∏è‚É£ –†–µ–∂–∏–º –ø–∏—Ç–∞–Ω–∏—è
- –ï—à—å—Ç–µ 4-5 —Ä–∞–∑ –≤ –¥–µ–Ω—å
- –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ –∑–∞–≤—Ç—Ä–∞–∫
- –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–∏–µ–º –ø–∏—â–∏ –∑–∞ 2-3 —á–∞—Å–∞ –¥–æ —Å–Ω–∞

3Ô∏è‚É£ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
- 50% —É–≥–ª–µ–≤–æ–¥—ã
- 30% –±–µ–ª–∫–∏
- 20% –∂–∏—Ä—ã

üí° –ü–æ–º–Ω–∏—Ç–µ: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ - —ç—Ç–æ –Ω–µ –¥–∏–µ—Ç–∞, –∞ –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏!

#–∑–¥–æ—Ä–æ–≤—å–µ #–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ–ø–∏—Ç–∞–Ω–∏–µ #–∑–æ–∂`,
    timestamp: new Date(2024, 0, 15, 14, 31)
  }
];

export default function ChatMessages() {
  const scrollRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (scrollRef.current) {
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
    }
  });

  const handleCopy = (content: string) => {
    navigator.clipboard.writeText(content);
  };

  return (
    <ScrollArea ref={scrollRef} className="flex-1 p-6">
      <div className="space-y-6">
        {messages.map((message) => (
          <div
            key={message.id}
            className={`flex ${
              message.role === 'assistant' ? 'items-start' : 'items-start justify-end'
            } space-x-4`}
          >
            {message.role === 'assistant' && (
              <Avatar>
                <AvatarImage src="/ai-avatar.png" />
                <AvatarFallback>AI</AvatarFallback>
              </Avatar>
            )}
            
            <div className={`group relative max-w-[80%] rounded-lg p-4 ${
              message.role === 'assistant' 
                ? 'bg-muted' 
                : 'bg-primary text-primary-foreground'
            }`}>
              <div className="whitespace-pre-wrap">{message.content}</div>
              <div className="mt-2 flex items-center justify-between">
                <div className={`text-xs ${
                  message.role === 'assistant' ? 'text-muted-foreground' : 'text-primary-foreground/80'
                }`}>
                  {message.timestamp.toLocaleTimeString()}
                </div>
                {message.role === 'assistant' && (
                  <div className="flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity">
                    <TooltipProvider>
                      <Tooltip>
                        <TooltipTrigger asChild>
                          <Button
                            variant="ghost"
                            size="icon"
                            className="h-8 w-8 text-muted-foreground hover:text-muted-foreground"
                            onClick={() => handleCopy(message.content)}
                          >
                            <Copy className="h-4 w-4" />
                          </Button>
                        </TooltipTrigger>
                        <TooltipContent>
                          <p>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</p>
                        </TooltipContent>
                      </Tooltip>
                    </TooltipProvider>

                    <Button
                      variant="ghost"
                      size="icon"
                      className="h-8 w-8 text-muted-foreground hover:text-muted-foreground"
                    >
                      <ThumbsUp className="h-4 w-4" />
                    </Button>

                    <Button
                      variant="ghost"
                      size="icon"
                      className="h-8 w-8 text-muted-foreground hover:text-muted-foreground"
                    >
                      <ThumbsDown className="h-4 w-4" />
                    </Button>
                  </div>
                )}
              </div>
            </div>

            {message.role === 'user' && (
              <Avatar>
                <AvatarImage src="https://github.com/shadcn.png" />
                <AvatarFallback>CN</AvatarFallback>
              </Avatar>
            )}
          </div>
        ))}
      </div>
    </ScrollArea>
  );
}